---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# Action test/validation workflow
name: 'Test GitHub Action ðŸ§ª'

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, edited, synchronize]
    branches: ['main']
  push:
    branches: ['main']

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

permissions: {}

# Parameters used during workflow test/development
env:
  CHARTS_SOURCE_DIR: 'charts'
  CHART_ARTIFACT_NAME: 'helm-charts'
  CHARTMUSEUM_STORAGE_DIR: './chartmuseum-storage'
  CHARTMUSEUM_PORT: '8080'
  CHART_REPOSITORY: 'lfreleng-actions/test-makefile-helm-chart'
  CHARTS_BUILD_DIR: 'test-makefile-helm-chart'

jobs:
  build:
    name: 'Build'
    runs-on: 'ubuntu-latest'
    outputs:
      charts_build_dir: "${{ env.CHARTS_BUILD_DIR }}"
      chart_artifact_name: "${{ env.CHART_ARTIFACT_NAME }}"
    permissions:
      contents: read
    timeout-minutes: 10
    steps:
      # yamllint disable-line rule:line-length
      - uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911  # v2.13.0
        with:
          egress-policy: audit

      # yamllint disable-line rule:line-length
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: 'Setup Helm'
        # yamllint disable-line rule:line-length
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112  # v4.3.0

      - name: 'Run make'
        # yamllint disable-line rule:line-length
        uses: lfreleng-actions/make-action@361e48884a6b7d7b5fcfcb38f399aa14e45127dc  # v0.1.1
        with:
          repository: 'lfreleng-actions/test-makefile-helm-chart'
          path: 'test-makefile-helm-chart'
          make_args: '-C test-makefile-helm-chart'

      - name: 'Upload Helm Charts as artefacts'
        # yamllint disable-line rule:line-length
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: "${{ env.CHART_ARTIFACT_NAME }}"
          path: "${{ env.CHARTS_BUILD_DIR }}/*.tgz"

  github-publish:
    name: 'Publish [GitHub]'
    runs-on: 'ubuntu-latest'
    needs:
      - build
    permissions:
      contents: read
      packages: write
    timeout-minutes: 3
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      # yamllint disable-line rule:line-length
      - uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911  # v2.13.0
        with:
          egress-policy: audit

      # yamllint disable-line rule:line-length
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: 'Download Helm Charts'
        # yamllint disable-line rule:line-length
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0  # v5.0.0
        with:
          name: "${{ needs.build.outputs.chart_artifact_name }}"
          path: "${{ needs.build.outputs.charts_build_dir }}"

      - uses: ./
        with:
          registry: 'ghcr.io'
          username: "${{ github.actor }}"
          password: "${{ github.token }}"
          charts_path: "${{ needs.build.outputs.charts_build_dir }}"

  dockerhub-publish:
    name: 'Publish [DockerHub]'
    runs-on: 'ubuntu-latest'
    needs:
      - build
    permissions:
      contents: read
    timeout-minutes: 3
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      # yamllint disable-line rule:line-length
      - uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911  # v2.13.0
        with:
          egress-policy: audit

      # yamllint disable-line rule:line-length
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: 'Download Helm Charts'
        # yamllint disable-line rule:line-length
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0  # v5.0.0
        with:
          name: "${{ needs.build.outputs.chart_artifact_name }}"
          path: "${{ needs.build.outputs.charts_build_dir }}"

      - uses: ./
        with:
          registry: 'docker.io'
          username: "${{ vars.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_PASSWORD }}"
          charts_path: "${{ needs.build.outputs.charts_build_dir }}"
          organisation: 'oransc'
